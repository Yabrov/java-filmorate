CREATE TABLE IF NOT EXISTS public."user"
(
    id       INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email    varchar                              NOT NULL,
    login    varchar                              NOT NULL,
    name     varchar,
    birthday date                                 NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."rating"
(
    id   INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name varchar                              NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."film"
(
    id             INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name           varchar                              NOT NULL,
    description    varchar(200)                         NOT NULL,
    release_date   date                                 NOT NULL,
    duration       int                                  NOT NULL,
    rating_id      int                                  NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT film_rating_fkey FOREIGN KEY (rating_id)
        REFERENCES public."rating" (id)
);

CREATE TABLE IF NOT EXISTS public."genre"
(
    id   INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name varchar                              NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."friendship_info"
(
    user_id   int     NOT NULL,
    friend_id varchar NOT NULL,
    PRIMARY KEY (user_id, friend_id),
    CONSTRAINT friendship_info_user_fkey FOREIGN KEY (user_id)
    REFERENCES public."user" (id)
);

CREATE TABLE IF NOT EXISTS public."likes_info"
(
    user_id int,
    film_id int,
    PRIMARY KEY (user_id, film_id),
    CONSTRAINT likes_info_user_fkey FOREIGN KEY (user_id)
        REFERENCES public."user" (id),
    CONSTRAINT likes_info_film_fkey FOREIGN KEY (film_id)
        REFERENCES public."film" (id)
);

CREATE TABLE IF NOT EXISTS public."film_genres_info"
(
    genre_id int,
    film_id int,
    PRIMARY KEY (genre_id, film_id),
    CONSTRAINT film_genres_info_film_fkey FOREIGN KEY (film_id)
    REFERENCES public."film" (id),
    CONSTRAINT film_genres_info_genre_fkey FOREIGN KEY (genre_id)
    REFERENCES public."genre" (id)
);