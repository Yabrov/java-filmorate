DROP TABLE IF EXISTS FILM_GENRE;
DROP TABLE IF EXISTS FRIENDS;
DROP TABLE IF EXISTS LIKES;
DROP TABLE IF EXISTS FILMS;
DROP TABLE IF EXISTS RATINGS;
DROP TABLE IF EXISTS GENRES;
DROP TABLE IF EXISTS USERS;

CREATE TABLE IF NOT EXISTS USERS
(
    id       INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email    varchar                              NOT NULL,
    login    varchar                              NOT NULL,
    name     varchar,
    birthday date                                 NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT unique_login UNIQUE (login)
);

CREATE TABLE IF NOT EXISTS RATINGS
(
    id   INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name varchar                              NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS FILMS
(
    id           INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name         varchar                              NOT NULL,
    description  varchar(200)                         NOT NULL,
    release_date date                                 NOT NULL,
    duration     int                                  NOT NULL,
    rating_id    int,
    PRIMARY KEY (id),
    CONSTRAINT film_rating_fkey FOREIGN KEY (rating_id)
        REFERENCES RATINGS (id)
);

CREATE TABLE IF NOT EXISTS GENRES
(
    id   INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name varchar                              NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS FRIENDS
(
    user_id   int     NOT NULL,
    friend_id int     NOT NULL,
    status    varchar NOT NULL,
    PRIMARY KEY (user_id, friend_id),
    CONSTRAINT friendship_info_user_fkey FOREIGN KEY (user_id)
        REFERENCES USERS (id)
);

CREATE TABLE IF NOT EXISTS LIKES
(
    user_id int,
    film_id int,
    PRIMARY KEY (user_id, film_id),
    CONSTRAINT likes_info_user_fkey FOREIGN KEY (user_id)
        REFERENCES USERS (id),
    CONSTRAINT likes_info_film_fkey FOREIGN KEY (film_id)
        REFERENCES FILMS (id)
);

CREATE TABLE IF NOT EXISTS FILM_GENRE
(
    genre_id int,
    film_id  int,
    PRIMARY KEY (genre_id, film_id),
    CONSTRAINT film_genres_info_film_fkey FOREIGN KEY (film_id)
        REFERENCES FILMS (id),
    CONSTRAINT film_genres_info_genre_fkey FOREIGN KEY (genre_id)
        REFERENCES GENRES (id)
);